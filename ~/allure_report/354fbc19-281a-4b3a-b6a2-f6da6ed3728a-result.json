{"name": "Verify SignUp button", "status": "broken", "statusDetails": {"message": "TypeError: expected str, bytes or os.PathLike object, not NoneType", "trace": "request = <SubRequest 'load_app' for <Function 'test_signup_test[kindrachuchka@gmail.com-street0912]'>>\n\n    @pytest.fixture(scope='function', autouse=True)\n    def load_app(request):\n        if isinstance(request.cls.webdriver, webdriver.Chrome):\n            chrome_options = Options()\n            #chrome_options.add_argument(\"--headless\")\n            prefs = {\"profile.default_content_setting_values.notifications\": 2}\n            chrome_options.add_experimental_option(\"prefs\", prefs)\n            request.cls.initialized_webdriver = request.cls.webdriver(executable_path=request.cls.webdriver_path, chrome_options=chrome_options)\n        elif isinstance(request.cls.webdriver, webdriver.Firefox):\n            _browser_profile = webdriver.FirefoxProfile()\n            _browser_profile.set_preference(\"dom.webnotifications.enabled\", False)\n            _browser_profile.set_preference(\"dom.push\"\n                                            \".enabled\", False)\n            options = fOptions()\n            #options.set_headless(headless=True)\n            request.cls.initialized_webdriver = request.cls.webdriver(executable_path=request.cls.webdriver_path,\n                                                                      firefox_options=options, firefox_profile=_browser_profile)\n        else:\n>           request.cls.initialized_webdriver = request.cls.webdriver(executable_path=request.cls.webdriver_path)\n\ntest/conftest.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv/lib/python3.7/site-packages/selenium/webdriver/chrome/webdriver.py:73: in __init__\n    self.service.start()\nvenv/lib/python3.7/site-packages/selenium/webdriver/common/service.py:76: in start\n    stdin=PIPE)\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/subprocess.py:769: in __init__\n    restore_signals, start_new_session)\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/subprocess.py:1430: in _execute_child\n    executable = os.fsencode(executable)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfilename = None\n\n    def fsencode(filename):\n        \"\"\"Encode filename (an os.PathLike, bytes, or str) to the filesystem\n        encoding with 'surrogateescape' error handler, return bytes unchanged.\n        On Windows, use 'strict' error handler if the file system encoding is\n        'mbcs' (which is the default encoding).\n        \"\"\"\n>       filename = fspath(filename)  # Does type-checking of `filename`.\nE       TypeError: expected str, bytes or os.PathLike object, not NoneType\n\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/os.py:809: TypeError"}, "descriptionHtml": "Checks that SignUp form contains all necessary controls", "attachments": [{"name": "log", "source": "d756c304-ad24-45ad-9adf-b380c6f306a6-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "af2acfae-2fa4-4106-beef-0eb48e8cc620-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "650aa15e-9032-4963-adff-4f5f7355a45e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "username", "value": "'kindrachuchka@gmail.com'"}, {"name": "password", "value": "'street0912'"}], "uuid": "33119f4a-8b8f-4703-9da7-61131778b387", "historyId": "abd4482beec0e7a5d8d080d0b4f6bba7", "fullName": "test.test_page.TestPages#test_signup_test[kindrachuchka@gmail.com-street0912]", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_page"}, {"name": "subSuite", "value": "TestPages"}, {"name": "host", "value": "kindrachuchka"}, {"name": "thread", "value": "1268-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_page"}]}